{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","components/AddNewPerson.js","services/PersonService.js","components/Notification.js","App.js","index.js"],"names":["Filter","searchTerm","handler","value","onChange","Person","name","number","id","removeHandler","onClick","Persons","personsList","map","person","key","AddNewPerson","props","onSubmit","submitHandler","nameValue","nameChange","numberValue","numberChange","type","url","axios","get","then","response","data","newPerson","post","console","log","delete","changedPerson","put","Notification","message","errorState","messageStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","errorStyle","style","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setSearchTerm","notification","setNotification","setErrorState","useEffect","personService","initalPersons","personsToShow","length","filter","toLowerCase","includes","resetForms","event","target","existingPerson","find","window","confirm","preventDefault","returnedPerson","setTimeout","catch","error","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5fd0a2db.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ searchTerm, handler }) => {\n  return (\n    <form>\n      <div>\n        Find by name: <input value={searchTerm} onChange={handler} />\n      </div>\n    </form>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Person = ({ name, number, id, removeHandler }) => {\n  return (\n    <p>{name} {number} <button onClick={() => removeHandler(id)}>remove</button></p>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ personsList, removeHandler }) => {\n  return (\n    <ul>\n      {personsList.map(person =>\n        <li key={person.id}>\n          <Person \n            name={person.name} \n            number={person.number}\n            id={person.id}\n            removeHandler={removeHandler} />\n        </li>\n      )}\n    </ul>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst AddNewPerson = (props) => {\n  return (\n    <form onSubmit={props.submitHandler}>\n      <div>\n        name: <input value={props.nameValue} onChange={props.nameChange} />\n      </div>\n      <div>\n        number: <input value={props.numberValue} onChange={props.numberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default AddNewPerson","import axios from 'axios'\n\nconst url = '/api/persons'\n\nconst getAllPersons = () => {\n  const request = axios.get(url)\n  return request.then(response => response.data)\n}\n\nconst addNewPerson = newPerson => {\n  const request = axios.post(url, newPerson)\n  return request.then(response => {\n    console.log(response)\n    return response.data\n  })\n}\n\nconst deletePerson = id => {\n  const request = axios.delete(`${url}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst updatePerson = (changedPerson) => {\n  const request = axios.put(`${url}/${changedPerson.id}`, changedPerson)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAllPersons,\n  addNewPerson,\n  deletePerson,\n  updatePerson\n}","import React from 'react'\n\nconst Notification = ({ message, errorState }) => {\n  const messageStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  }\n\n  const errorStyle = { ...messageStyle, color: 'red' }\n\n  if (message === null) {\n    return null\n  }\n\n  if (errorState) {\n    return (\n      <div style={errorStyle} >\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div style={messageStyle} >\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport AddNewPerson from './components/AddNewPerson'\nimport personService from './services/PersonService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [errorState, setErrorState] = useState(false)\n\n  useEffect(() => {\n    personService\n      .getAllPersons()\n      .then(initalPersons =>\n        setPersons(initalPersons))\n  }, [])\n\n  const personsToShow = searchTerm.length > 0\n    ? persons.filter(person => person.name.toLowerCase().includes(searchTerm))\n    : persons\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleTermChange = (event) => {\n    setSearchTerm(event.target.value)\n  }\n\n  const addOrUpdatePerson = (event) => {\n    const existingPerson = persons.find(person => person.name === newName)\n\n    if (existingPerson) {\n      const confirmed = window.confirm(\n        `${existingPerson.name} already exists. Update their phone number?`\n      )\n\n      if (confirmed) {\n        event.preventDefault()\n        const changedPerson = { ...existingPerson, number: newNumber }\n        personService\n          .updatePerson(changedPerson)\n          .then(returnedPerson => {\n            setPersons(\n              persons.map(person => person.id !== existingPerson.id\n                ? person\n                : returnedPerson\n              ))\n            setNotification(`${changedPerson.name}'s phone number was updated.`)\n            setTimeout(() => {\n              setNotification(null)\n            }, 3000)\n          })\n          .catch(error => {\n            setErrorState(true)\n            setNotification(`${changedPerson.name} no longer exists on the server.`)\n            setPersons(persons.filter(person => person.id !== changedPerson.id))\n            setTimeout(() => {\n              setNotification(null)\n              setErrorState(false)\n            }, 3000)\n          })\n      }\n    } else {\n      event.preventDefault()\n      const person = {\n        name: newName,\n        number: newNumber\n      }\n\n      personService\n        .addNewPerson(person)\n        .then(returnedPerson => {\n          console.log('Returned from PersonService: ', returnedPerson)\n          setPersons(persons.concat(returnedPerson))\n          setNotification(`${person.name} was added to the phonebook.`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000)\n        })\n      resetForms()\n    }\n  }\n\n  const removePerson = (id) => {\n    const personToDelete = persons.find(person => person.id === id)\n    const confirmed = window.confirm(`Delete ${personToDelete.name}?`)\n\n    if (confirmed) {\n      personService.deletePerson(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n          setNotification(`${personToDelete.name} was removed from the phonebook.`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000)\n        })\n        .catch(error => {\n          setErrorState(true)\n          setNotification(`${personToDelete.name} no longer exists on the server.`)\n          setPersons(persons.filter(person => person.id !== id))\n          setTimeout(() => {\n            setNotification(null)\n            setErrorState(false)\n          }, 3000)\n        })\n    }\n  }\n\n  const resetForms = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} errorState={errorState} />\n      <Filter searchTerm={searchTerm} handler={handleTermChange} />\n      <h2>Add New Number</h2>\n      <AddNewPerson\n        submitHandler={addOrUpdatePerson}\n        nameValue={newName}\n        nameChange={handleNameChange}\n        numberValue={newNumber}\n        numberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        personsList={personsToShow}\n        removeHandler={removePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}